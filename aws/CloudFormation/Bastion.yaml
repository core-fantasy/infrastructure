AWSTemplateFormatVersion: '2010-09-09'
# Reference  https://docs.aws.amazon.com/quickstart/latest/linux-bastion/overview.html and stacks
# from the GitHub repo listed therein.
Description: Creates the SSH Bastion.
Metadata: {}
Parameters:
  BucketName:
    Type: String
    Description: S3 bucket containing all cloudformation (and related) files
  EC2KeyPairName:
    Type: String
    Description: EC2 Key pair name
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref 'BastionMainLogGroup'
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Join
            - /
            - - core-fantasy
              - !Ref 'AWS::StackName'
  BastionHostRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                Resource:
                  - !Sub 'arn:aws:s3:::${BucketName}/scripts/*'
                  - !Sub 'arn:aws:s3:::${BucketName}/etc/*'
                Effect: Allow
          PolicyName: bastion-s3-policy
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - logs:CreateLogStream
                  - logs:GetLogEvents
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutRetentionPolicy
                  - logs:PutMetricFilter
                  - logs:CreateLogGroup
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*'
                Effect: Allow
          PolicyName: bastion-cloudwatch-logs-policy
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ec2:AssociateAddress
                  - ec2:DescribeAddresses
                Resource:
                  - '*'
                Effect: Allow
          PolicyName: bastion-eip-policy
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: '2012-10-17'
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref 'BastionHostRole'
      Path: /
  BastionEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref 'BastionLaunchConfiguration'
      VPCZoneIdentifier:
        - !ImportValue 'PublicSubnetIdA'
      MinSize: '1'
      MaxSize: '1'
      Cooldown: '300'
      DesiredCapacity: '1'
      Tags:
        - Key: Name
          Value: LinuxBastion
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT30M
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref 'BastionHostRole'
          buckets:
            - !Ref 'BucketName'
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/bastion_bootstrap.sh:
              source: !Sub 'https://${BucketName}.s3.amazonaws.com/scripts/bastion_bootstrap.sh'
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/BastionBanner.txt:
              source: !Sub 'https://${BucketName}.s3.amazonaws.com/etc/BastionBanner.txt'
              mode: '000440'
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            b-bootstrap:
              command: !Join
                - ''
                - - /tmp/bastion_bootstrap.sh
                  - ' --banner '
                  - !Sub 'file:///tmp/BastionBanner.txt'  # bootstrap uses curl, which can't authorize to S3
                  - ' --enable true'
                  - ' --tcp-forwarding true'
                  - ' --x11-forwarding true'
    Properties:
      AssociatePublicIpAddress: 'true'
      KeyName: !Ref 'EC2KeyPairName'
      IamInstanceProfile: !Ref 'BastionHostProfile'
      ImageId: 'ami-a0cfeed8'   # Need to use AMI from AWS website listed above.
      SecurityGroups:
        - !Ref 'BastionSecurityGroup'
      InstanceType: 't2.micro'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - "set -x\n"
            - "export PATH=$PATH:/usr/local/bin\n"
            - "# MJA - Beginning of custom code\n"
            - "whoami\n"
            - "sudo yum update -y\n"
            - "# MJA - End of custom code\n"
            - "which pip &> /dev/null\n"
            - "if [ $? -ne 0 ] ; then\n"
            - "    echo \"PIP NOT INSTALLED\"\n"
            - "    [ `which yum` ] && $(yum install -y epel-release; yum install -y\
              \ python-pip) && echo \"PIP INSTALLED\"\n"
            - "    [ `which apt-get` ] && apt-get -y update && apt-get -y install\
              \ python-pip && echo \"PIP INSTALLED\"\n"
            - "fi\n"
            - "pip install --upgrade pip &> /dev/null\n"
            - "pip install awscli --ignore-installed six &> /dev/null\n"
            - "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n"
            - EIP_LIST="
            - !Ref 'BastionEIP'
            - "\"\n"
            - CLOUDWATCHGROUP=
            - !Ref 'BastionMainLogGroup'
            - "\n"
            - 'cfn-init -v --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionLaunchConfiguration --region '
            - !Ref 'AWS::Region'
            - "\n"
            - 'cfn-signal -e $? --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionAutoScalingGroup --region '
            - !Ref 'AWS::Region'
            - "\n"
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId:  !ImportValue 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
Outputs:
  BastionEIP:
    Description: Elastic IP for Bastion
    Value: !Ref 'BastionEIP'
    Export:
      Name: !Sub '${AWS::StackName}-EIP'
